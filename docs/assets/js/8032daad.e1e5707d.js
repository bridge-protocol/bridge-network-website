"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7572],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(n),f=i,d=m["".concat(c,".").concat(f)]||m[f]||u[f]||a;return n?r.createElement(d,o(o({ref:t},s),{},{components:n})):r.createElement(d,o({ref:t},s))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9094:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return s},default:function(){return m}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],l={id:"integration-claim",title:"Claim",sidebar_label:"Claim"},c=void 0,p={unversionedId:"integration-claim",id:"integration-claim",title:"Claim",description:"The claim endpoints exposes functionality to retrieve claim type information and verifying claims",source:"@site/docs/integration-claim.md",sourceDirName:".",slug:"/integration-claim",permalink:"/docs/integration-claim",tags:[],version:"current",frontMatter:{id:"integration-claim",title:"Claim",sidebar_label:"Claim"},sidebar:"gettingStarted",previous:{title:"Passport",permalink:"/docs/integration-passport"},next:{title:"Profile",permalink:"/docs/integration-profile"}},s=[{value:"GET /claim/types",id:"get-claimtypes",children:[{value:"Example Response:",id:"example-response",children:[],level:5}],level:3},{value:"POST /claim//verifysignature",id:"post-claimverifysignature",children:[{value:"Example Response:",id:"example-response-1",children:[],level:5}],level:3}],u={toc:s};function m(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The claim endpoints exposes functionality to retrieve claim type information and verifying claims"),(0,a.kt)("h3",{id:"get-claimtypes"},"GET /claim/types"),(0,a.kt)("p",null,"Retrieves the type definitions for all known Claim types on the Bridge Network"),(0,a.kt)("h5",{id:"example-response"},"Example Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'[\n    {\n        "id":1,\n        "name":"First Name",\n        "description":"Owner first name",\n        "dataType":"string",\n        "scope":"private",\n        "defaultExpirationDays":0\n    }\n]\n')),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"post-claimverifysignature"},"POST /claim//verifysignature"),(0,a.kt)("p",null,"Verifies the signature of the provided claim"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"passportId")," (string) - the passport the claim was signed for"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"claim")," (",(0,a.kt)("a",{href:"sdk-models-claim"},"Claim"),") - the claim to verify")),(0,a.kt)("h5",{id:"example-response-1"},"Example Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'    {\n        "result": true\n    }\n')))}m.isMDXComponent=!0}}]);