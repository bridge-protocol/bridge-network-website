"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[736],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return y}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),u=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(r),y=a,f=d["".concat(o,".").concat(y)]||d[y]||p[y]||s;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,i=new Array(s);i[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<s;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4268:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var n=r(7462),a=r(3366),s=(r(7294),r(3905)),i=["components"],l={id:"sdk-services-relay",title:"Request Relay",sidebar_label:"Request Relay"},o=void 0,u={unversionedId:"sdk-services-relay",id:"sdk-services-relay",title:"Request Relay",description:"Service to facilitate relaying encrypted payloads between applications and devices for synchronization and challenge / request.  Requests and responses are routed using the Bridge Network via temporary encrypted payloads.",source:"@site/docs/sdk-services-relay.md",sourceDirName:".",slug:"/sdk-services-relay",permalink:"/docs/sdk-services-relay",tags:[],version:"current",frontMatter:{id:"sdk-services-relay",title:"Request Relay",sidebar_label:"Request Relay"},sidebar:"gettingStarted",previous:{title:"Token Swap",permalink:"/docs/sdk-services-tokenswap"},next:{title:"Claim",permalink:"/docs/sdk-utils-claim"}},c=[{value:"Functions",id:"functions",children:[{value:"createRequest()",id:"createrequest",children:[],level:3},{value:"getRequest()",id:"getrequest",children:[],level:3},{value:"createResponse()",id:"createresponse",children:[],level:3},{value:"getResponse()",id:"getresponse",children:[],level:3}],level:2}],p={toc:c};function d(e){var t=e.components,r=(0,a.Z)(e,i);return(0,s.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Service to facilitate relaying encrypted payloads between applications and devices for synchronization and challenge / request.  Requests and responses are routed using the Bridge Network via temporary encrypted payloads."),(0,s.kt)("h2",{id:"functions"},"Functions"),(0,s.kt)("h3",{id:"createrequest"},"createRequest()"),(0,s.kt)("p",null,"Create a request"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"async createRequest(type, request)\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"type")," (int) - the request type"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"request")," (string) - encrypted request payload")),(0,s.kt)("hr",null),(0,s.kt)("h3",{id:"getrequest"},"getRequest()"),(0,s.kt)("p",null,"Get an existing request"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"async getRequest(id)\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"id")," (string) - the request identifier to retrieve")),(0,s.kt)("hr",null),(0,s.kt)("h3",{id:"createresponse"},"createResponse()"),(0,s.kt)("p",null,"Create a request relay response"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"async createResponse(id, response)\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"id")," (string) - the request identifier scope to send the response for"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"request")," (string) - encrypted response payload")),(0,s.kt)("hr",null),(0,s.kt)("h3",{id:"getresponse"},"getResponse()"),(0,s.kt)("p",null,"Get a request relay response"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"async getResponse(id)\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"id")," (string) - the request identifier to get ther response for")))}d.isMDXComponent=!0}}]);