"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[907],{3905:function(e,t,n){n.d(t,{Zo:function(){return g},kt:function(){return u}});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},g=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,c=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),d=l(n),u=s,m=d["".concat(c,".").concat(u)]||d[u]||p[u]||a;return n?r.createElement(m,i(i({ref:t},g),{},{components:n})):r.createElement(m,i({ref:t},g))}));function u(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,i=new Array(a);i[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:s,i[1]=o;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9930:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return g},default:function(){return d}});var r=n(7462),s=n(3366),a=(n(7294),n(3905)),i=["components"],o={id:"messaging",title:"Bridge Protocol",sidebar_label:"Overview"},c=void 0,l={unversionedId:"messaging",id:"messaging",title:"Bridge Protocol",description:"The Bridge Protcol is the core messaging protocol that handles the encoding, signing, and encrypting of messages to faciliate secure peer-to-peer communication between Bridge Passports.  All messages are hex encoded for transport.",source:"@site/docs/messaging.md",sourceDirName:".",slug:"/messaging",permalink:"/docs/messaging",tags:[],version:"current",frontMatter:{id:"messaging",title:"Bridge Protocol",sidebar_label:"Overview"},sidebar:"gettingStarted",previous:{title:"Blockchain Wallets",permalink:"/docs/passport-wallet"},next:{title:"Authentication",permalink:"/docs/messaging-auth"}},g=[{value:"Message Structure",id:"message-structure",children:[],level:2},{value:"Message Types",id:"message-types",children:[{value:"Encoded Message",id:"encoded-message",children:[],level:3},{value:"Signed Message",id:"signed-message",children:[],level:3},{value:"Encrypted Message",id:"encrypted-message",children:[],level:3}],level:2}],p={toc:g};function d(e){var t=e.components,n=(0,s.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The Bridge Protcol is the core messaging protocol that handles the encoding, signing, and encrypting of messages to faciliate secure peer-to-peer communication between Bridge Passports.  All messages are hex encoded for transport."),(0,a.kt)("img",{class:"centered",src:"/img/message-overview.png"}),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"message-structure"},"Message Structure"),(0,a.kt)("img",{src:"/img/message-structure.png"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Public Key")," - the public key of the sending passport"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Payload")," - the message payload (see below for formats)")),(0,a.kt)("h2",{id:"message-types"},"Message Types"),(0,a.kt)("h3",{id:"encoded-message"},"Encoded Message"),(0,a.kt)("p",null,"An encoded message is a simple message with no signing or encryption."),(0,a.kt)("h3",{id:"signed-message"},"Signed Message"),(0,a.kt)("p",null,"A signed message contains the signed payload.  The the signed message can be verified using the public key and the signature of the payload."),(0,a.kt)("h3",{id:"encrypted-message"},"Encrypted Message"),(0,a.kt)("p",null,"An encrypted message has an encrypted payload.  The payload can be verified and decrypted using the public key of the sending passport and the private key of the the receiving passport."))}d.isMDXComponent=!0}}]);