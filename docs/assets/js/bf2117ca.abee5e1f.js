"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5664],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return g}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=l(r),g=o,k=d["".concat(p,".").concat(g)]||d[g]||c[g]||i;return r?n.createElement(k,s(s({ref:t},u),{},{components:r})):n.createElement(k,s({ref:t},u))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,s=new Array(i);s[0]=d;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var l=2;l<i;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9830:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),s=["components"],a={id:"sdk-services-bridge",title:"Bridge",sidebar_label:"Bridge"},p=void 0,l={unversionedId:"sdk-services-bridge",id:"sdk-services-bridge",title:"Bridge",description:"Service used to retrieve Bridge Protocol Corporation information from the Bridge Network",source:"@site/docs/sdk-services-bridge.md",sourceDirName:".",slug:"/sdk-services-bridge",permalink:"/docs/sdk-services-bridge",tags:[],version:"current",frontMatter:{id:"sdk-services-bridge",title:"Bridge",sidebar_label:"Bridge"},sidebar:"gettingStarted",previous:{title:"Blockchain",permalink:"/docs/sdk-services-blockchain"},next:{title:"Claim",permalink:"/docs/sdk-services-claim"}},u=[{value:"Functions",id:"functions",children:[{value:"getBridgePassportId()",id:"getbridgepassportid",children:[],level:3},{value:"getBridgePublicKey()",id:"getbridgepublickey",children:[],level:3},{value:"getBridgeNetworkFee()",id:"getbridgenetworkfee",children:[],level:3}],level:2}],c={toc:u};function d(e){var t=e.components,r=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Service used to retrieve Bridge Protocol Corporation information from the Bridge Network"),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"getbridgepassportid"},"getBridgePassportId()"),(0,i.kt)("p",null,"Retrieve the Bridge Network Passport Id"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"async getBridgePassportId(useApi, passport, passphrase)\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"useApi")," (bool) - whether or not to use the local constants or retrieve from Bridge Network API"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"passport")," (",(0,i.kt)("a",{href:"sdk-models-passport"},"Passport"),") - passport context used for API authentication, only required if useApi=true"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"passphrase")," (string) - password used to unlock context passport private key, only required if useApi=true")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getbridgepublickey"},"getBridgePublicKey()"),(0,i.kt)("p",null,"Retrieve the Bridge Network Public Key"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"async getBridgePublicKey(useApi, passport, passphrase)\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"useApi")," (bool) - whether or not to use the local constants or retrieve from Bridge Network API"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"passport")," (",(0,i.kt)("a",{href:"sdk-models-passport"},"Passport"),") - passport context used for API authentication, only required if useApi=true"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"passphrase")," (string) - password used to unlock context passport private key, only required if useApi=true")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getbridgenetworkfee"},"getBridgeNetworkFee()"),(0,i.kt)("p",null,"Retrieve the Bridge Network Fee"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"async getBridgeNetworkFee(passport, passphrase)\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"passport")," (",(0,i.kt)("a",{href:"sdk-models-passport"},"Passport"),") - passport context used for API authentication"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"passphrase")," (string) - password used to unlock context passport private key")))}d.isMDXComponent=!0}}]);